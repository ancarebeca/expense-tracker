// Code generated by counterfeiter. DO NOT EDIT.
package servicesfakes

import (
	"sync"

	"github.com/ancarebeca/expense-tracker/model"
	"github.com/ancarebeca/expense-tracker/services"
)

type FakeStatementsLoader struct {
	LoadStub        func(statements []*model.Statement)
	loadMutex       sync.RWMutex
	loadArgsForCall []struct {
		statements []*model.Statement
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeStatementsLoader) Load(statements []*model.Statement) {
	var statementsCopy []*model.Statement
	if statements != nil {
		statementsCopy = make([]*model.Statement, len(statements))
		copy(statementsCopy, statements)
	}
	fake.loadMutex.Lock()
	fake.loadArgsForCall = append(fake.loadArgsForCall, struct {
		statements []*model.Statement
	}{statementsCopy})
	fake.recordInvocation("Load", []interface{}{statementsCopy})
	fake.loadMutex.Unlock()
	if fake.LoadStub != nil {
		fake.LoadStub(statements)
	}
}

func (fake *FakeStatementsLoader) LoadCallCount() int {
	fake.loadMutex.RLock()
	defer fake.loadMutex.RUnlock()
	return len(fake.loadArgsForCall)
}

func (fake *FakeStatementsLoader) LoadArgsForCall(i int) []*model.Statement {
	fake.loadMutex.RLock()
	defer fake.loadMutex.RUnlock()
	return fake.loadArgsForCall[i].statements
}

func (fake *FakeStatementsLoader) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.loadMutex.RLock()
	defer fake.loadMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *FakeStatementsLoader) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ services.StatementsLoader = new(FakeStatementsLoader)
